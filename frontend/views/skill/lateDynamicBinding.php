<h1>Late / dynamic binding (Позднее/динамическое связывание)</h1>

<p>Давайте представим себя компилятором. Вам нужно понять как скомпилировать такой код:</p>

<pre>
    function drawShape (Shape $shape){
        $shape->draw();
    }
</pre>

<p>Итак, вызов метода draw в классе <code>Shape</code>. Но нам известно ещё и о четырёх классах переопределяющих этот метод. Можно ли уже сейчас понять какую реализацию нужно выбрать? Похоже, что нет, ведь для этого придётся запустить программу и узнать какой же объект будет подан в параметр. Но одно вы знаете точно — какой бы объект ни был передан, он точно будет иметь реализацию draw.
</p>
<p>В результате машинный код, который вы создадите, будет каждый раз при проходе через этот участок проверять что за объект этот <code>$shape</code>, и выбирать реализацию метода <code>draw</code> из соответствующего класса.
</p>
<p>Такая динамическая проверка типа называется <b>поздним или динамическим связыванием</b>:
</p>
<p><b>Поздним</b>, потому что мы связываем объект и реализацию уже после компиляции.</p>
<p><b>Динамическим</b>, потому что мы делаем это при каждом прохождении через этот участок.</p>